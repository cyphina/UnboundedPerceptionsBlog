import{S as e,b as o,s as t,e as n,q as a,t as r,c as i,d as s,r as d,f as c,g as l,h,j as g,k as m,o as f}from"./client.9c796c44.js";function u(e){let o,t,u,b,k,v,w,I,y,E,T,P,C,D,S,H,L,x,U,F,M,N,j,W,z,A,B,J,O,q,G,K,Q,R,V,X,Y,Z,$,_,ee,oe,te,ne,ae,re,ie,se,de;return{c(){o=n("main"),t=n("img"),b=a(),k=n("p"),v=r("This is a glimpse of my dialog tool which I haven't worked on in a while. I made this in 2018-2019 over the\r\n        break so I could learn a bit about WPF."),w=a(),I=n("a"),y=r("Link To the Tool"),E=a(),T=n("p"),P=r("It features several things including:"),C=a(),D=n("ul"),S=n("li"),H=r("Branching dialog (choices)"),L=a(),x=n("li"),U=r("Node based editing (similar to UE4 controls)"),F=a(),M=n("li"),N=r("Dialog Conditionals"),j=a(),W=n("li"),z=r("Support for triggering events in my game"),A=a(),B=n("li"),J=r("Exports the dialog data to JSON which can be added to data tables within UE4"),O=a(),q=n("p"),G=r("The controls are straight forward (like UE4 node editors). They controls are specified in the github but here's\r\n        a short reiteration:"),K=a(),Q=n("p"),R=r("Click on any node to select them, or click drag to create a selection rectangle and select multiple nodes. Then\r\n        we can move them all by dragging from one of the bodies of the selected noes."),V=a(),X=n("p"),Y=r("Scroll to zoom in and out. Pan around by right click dragging around the dark blue background. Double click on\r\n        the red header to change the title of the dialog. This matters since inside the game, the conversation name is\r\n        used for several things."),Z=a(),$=n("p"),_=r("Drag and drop nodes around the editing field. Make sure to connect nodes to the root node since the dialog tree\r\n        is traversed from the root node. Hold F and click to create a dialog node. Drag off the little button and drop\r\n        onto the body of another nodes to create a connection. If there's more than one connection from a node, it\r\n        becomes a choice node."),ee=a(),oe=n("p"),te=r("Hold T and click to create a Trigger node. Hold C and click to create a conditional node which should connect to\r\n        two nodes. The first node it is connected to is reached if the condition is true, and the second node connected\r\n        is reached if the condition is false."),ne=a(),ae=n("p"),re=r("Click on the selection box and hover over an element to see a description of what parameters to pass to the\r\n        condition and trigger nodes."),ie=a(),se=n("p"),de=r("I think I enjoy developing web apps more so I'll probably be making tools with Svelte form now on. However, WPF\r\n        was an interesting framework. I still need to make time to learn more C#, but there are so many things to learn\r\n        and I don't know what I feel like doing. I guess wherever my career takes me I'll focus on that, although\r\n        gameplay programming will always be one of the higher priorities."),this.h()},l(e){o=i(e,"MAIN",{class:!0});var n=s(o);t=i(n,"IMG",{src:!0,alt:!0,class:!0}),b=d(n),k=i(n,"P",{});var a=s(k);v=c(a,"This is a glimpse of my dialog tool which I haven't worked on in a while. I made this in 2018-2019 over the\r\n        break so I could learn a bit about WPF."),a.forEach(l),w=d(n),I=i(n,"A",{href:!0,class:!0});var r=s(I);y=c(r,"Link To the Tool"),r.forEach(l),E=d(n),T=i(n,"P",{});var h=s(T);P=c(h,"It features several things including:"),h.forEach(l),C=d(n),D=i(n,"UL",{});var g=s(D);S=i(g,"LI",{});var m=s(S);H=c(m,"Branching dialog (choices)"),m.forEach(l),L=d(g),x=i(g,"LI",{});var f=s(x);U=c(f,"Node based editing (similar to UE4 controls)"),f.forEach(l),F=d(g),M=i(g,"LI",{});var u=s(M);N=c(u,"Dialog Conditionals"),u.forEach(l),j=d(g),W=i(g,"LI",{});var p=s(W);z=c(p,"Support for triggering events in my game"),p.forEach(l),A=d(g),B=i(g,"LI",{});var ce=s(B);J=c(ce,"Exports the dialog data to JSON which can be added to data tables within UE4"),ce.forEach(l),g.forEach(l),O=d(n),q=i(n,"P",{});var le=s(q);G=c(le,"The controls are straight forward (like UE4 node editors). They controls are specified in the github but here's\r\n        a short reiteration:"),le.forEach(l),K=d(n),Q=i(n,"P",{});var he=s(Q);R=c(he,"Click on any node to select them, or click drag to create a selection rectangle and select multiple nodes. Then\r\n        we can move them all by dragging from one of the bodies of the selected noes."),he.forEach(l),V=d(n),X=i(n,"P",{});var ge=s(X);Y=c(ge,"Scroll to zoom in and out. Pan around by right click dragging around the dark blue background. Double click on\r\n        the red header to change the title of the dialog. This matters since inside the game, the conversation name is\r\n        used for several things."),ge.forEach(l),Z=d(n),$=i(n,"P",{});var me=s($);_=c(me,"Drag and drop nodes around the editing field. Make sure to connect nodes to the root node since the dialog tree\r\n        is traversed from the root node. Hold F and click to create a dialog node. Drag off the little button and drop\r\n        onto the body of another nodes to create a connection. If there's more than one connection from a node, it\r\n        becomes a choice node."),me.forEach(l),ee=d(n),oe=i(n,"P",{});var fe=s(oe);te=c(fe,"Hold T and click to create a Trigger node. Hold C and click to create a conditional node which should connect to\r\n        two nodes. The first node it is connected to is reached if the condition is true, and the second node connected\r\n        is reached if the condition is false."),fe.forEach(l),ne=d(n),ae=i(n,"P",{});var ue=s(ae);re=c(ue,"Click on the selection box and hover over an element to see a description of what parameters to pass to the\r\n        condition and trigger nodes."),ue.forEach(l),ie=d(n),se=i(n,"P",{});var pe=s(se);de=c(pe,"I think I enjoy developing web apps more so I'll probably be making tools with Svelte form now on. However, WPF\r\n        was an interesting framework. I still need to make time to learn more C#, but there are so many things to learn\r\n        and I don't know what I feel like doing. I guess wherever my career takes me I'll focus on that, although\r\n        gameplay programming will always be one of the higher priorities."),pe.forEach(l),n.forEach(l),this.h()},h(){t.src!==(u=p)&&h(t,"src",u),h(t,"alt","Missing"),h(t,"class","mx-auto"),h(I,"href","https://github.com/cyphina/DialogTool"),h(I,"class","my-2"),h(o,"class","m-2")},m(e,n){g(e,o,n),m(o,t),m(o,b),m(o,k),m(k,v),m(o,w),m(o,I),m(I,y),m(o,E),m(o,T),m(T,P),m(o,C),m(o,D),m(D,S),m(S,H),m(D,L),m(D,x),m(x,U),m(D,F),m(D,M),m(M,N),m(D,j),m(D,W),m(W,z),m(D,A),m(D,B),m(B,J),m(o,O),m(o,q),m(q,G),m(o,K),m(o,Q),m(Q,R),m(o,V),m(o,X),m(X,Y),m(o,Z),m(o,$),m($,_),m(o,ee),m(o,oe),m(oe,te),m(o,ne),m(o,ae),m(ae,re),m(o,ie),m(o,se),m(se,de)},p:f,i:f,o:f,d(e){e&&l(o)}}}const p="/images/tools/dialogtool.png";export default class extends e{constructor(e){super(),o(this,e,null,u,t,{})}}
